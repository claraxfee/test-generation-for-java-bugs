Bug 9 Relevant Tests call revert():
Bug in revert()
A reverted line means that a new line is created with an inverted direction.
The original code creates a new line from the origin to the origin with the direction subtracted.
The direction only can store a limited number of values, inverting off of these 
limited values causes mathematical error.
The fix uses direction.negate on a clone of the original line.

Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NaN;
      Line line0 = new Line(vector3D0, vector3D0);
      Line line1 = line0.revert();
      assertNotSame(line1, line0);
  }

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector3D vector3D0 = new Vector3D((-2858.65), (-2858.65), (-2858.65));
      Vector3D vector3D1 = Vector3D.PLUS_K;
      Line line0 = new Line(vector3D0, vector3D1);
      Line line1 = line0.revert();
      boolean boolean0 = line1.isSimilarTo(line0);
      assertNotSame(line1, line0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_J;
      double[] doubleArray0 = new double[3];
      Vector3D vector3D1 = new Vector3D(doubleArray0);
      Line line0 = new Line(vector3D1, vector3D0);
      Line line1 = line0.revert();
      assertNotSame(line1, line0);
  }